stages:
 - test
 - build
 - publish
 - deploy

.skippable: &skippable
  except:
    variables:
      # Possible improvement for later: /^\[(.*,\s*)*skip?(,.*)*\]/i
      # This would allow for patterns such as [abc, skip, cba] etc.
      # This tag allows for skipping the pipeline, useful for example
      # if you want to push unfinished changes or for documentation.
      - $CI_COMMIT_MESSAGE =~ /^\[skip?\]/i

tests:
  <<: *skippable
  stage: test
  image: maven:3.8.3-openjdk-17
  script:
    - mvn -q test



build_gateway_image:
  <<: *skippable
  image: docker:20
  services:
    - docker:20-dind
  stage: build
  variables:
    DOCKER_DRIVER: "overlay2"
    CONTAINER_REPOSITORY: "pvt2023"
    VERSION: "1.0"
  before_script:
    - apk update && apk add jq
  script:
    - docker build -t $CONTAINER_REPOSITORY/gateway:$VERSION gateway
  

build_api_image:
  <<: *skippable
  image: docker:20
  services:
    - docker:20-dind
  stage: build
  variables:
    DOCKER_DRIVER: "overlay2"
    CONTAINER_REPOSITORY: "pvt2023"
    VERSION: "1.0"
  before_script:
    - apk update && apk add jq
  script:
    - docker build -t $CONTAINER_REPOSITORY/api:$VERSION api
  


publish_gateway_image:
  <<: *skippable
  image: docker:20
  services:
    - docker:20-dind
  stage: publish
  variables:
    DOCKER_DRIVER: "overlay2"
    CONTAINER_REPOSITORY: "pvt2023"
    VERSION: "1.0"
  before_script:
    - apk update && apk add jq
    - docker login -u "$DOCKER_CLIENT" -p "$DOCKER_SECRET"
  script:
    - docker build -t $CONTAINER_REPOSITORY/gateway:$VERSION gateway
    - docker push $CONTAINER_REPOSITORY/gateway:$VERSION
    - docker tag $CONTAINER_REPOSITORY/gateway:$VERSION $CONTAINER_REPOSITORY/gateway:latest
    - docker push $CONTAINER_REPOSITORY/gateway:latest
  only:
    - main

publish_api_image:
  <<: *skippable
  image: docker:20
  services:
    - docker:20-dind
  stage: publish
  variables:
    DOCKER_DRIVER: "overlay2"
    CONTAINER_REPOSITORY: "pvt2023"
    VERSION: "1.0"
  before_script:
    - apk update && apk add jq
    - docker login -u "$DOCKER_CLIENT" -p "$DOCKER_SECRET"
  script:
    - docker build -t $CONTAINER_REPOSITORY/api:$VERSION api
    - docker push $CONTAINER_REPOSITORY/api:$VERSION
    - docker tag $CONTAINER_REPOSITORY/api:$VERSION $CONTAINER_REPOSITORY/api:latest
    - docker push $CONTAINER_REPOSITORY/api:latest
  only:
    - main


deploy:
  <<: *skippable
  image: ubuntu:latest
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | tr -d '\r')
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - ssh pvt@imp.cs.umu.se "cd /home/pvt/Desktop/infra && docker compose pull && docker compose down && docker compose up -d"
  only:
    - main

deploy_javadoc:
  <<: *skippable
  image: ubuntu:latest
  stage: deploy
  before_script:
    - apt-get update -y && apt-get upgrade -y && apt install openssh-client maven rsync openjdk-17-jdk openjdk-17-jre -y
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | tr -d '\r')
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - mvn javadoc:aggregate
    - rsync -avzhuP  ./target/site/apidocs/* pvt@imp.cs.umu.se:/home/pvt/pvt-web/javadoc/
  only:
    - main
