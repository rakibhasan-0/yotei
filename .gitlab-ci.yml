stages:
  - linter
  - build
  - test
  - undeploy_test_server
  - deploy_test_server
  - systest
  - deploy_prod_server

dummy-job:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED
  tags:
   - system
  script:
  - echo "Hello World!"

test-linter-frontend:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED
      changes:
        - frontend/**/*
  image: node:20
  tags:
    - chappie #Runner-namn
  before_script:
    - cd frontend
    - npm ci --no-progress --quiet --cache .npm --prefer-offline
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/.npm/
  stage: linter
  script:
      - npm run lint:ci

test-backend:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED
      changes:
        - backend/**/*
  stage: test
  tags:
    - chappie #Runner-namn
  image: maven:3.8.3-openjdk-17
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/backend/.m2/repository"
  cache:
    paths:
      - backend/.m2/repository
  script:
    - cd backend
    - mvn -q test

test-frontend:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED
      changes:
        - frontend/**/*
  stage: test
  tags:
    - chappie #Runner-namn
  image: node:20
  before_script:
    - cd frontend
    - npm ci --no-progress --quiet --cache .npm --prefer-offline
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/.npm/
  script:
    - npm run test:ci

build-frontend:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED
      changes:
        - frontend/**/*
  stage: build
  tags:
    - chappie #Runner-namn
  image: node:20
  before_script:
    - cd frontend
    - npm ci --no-progress --quiet --cache .npm --prefer-offline
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/.npm/
  script:
    - npm run build

undeploy-test-server:
  stage: undeploy_test_server
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED
  tags:
    - system
  script:
    - docker compose -f docker-compose.yml -f docker-compose-feature.yml down || true


deploy-test-server:
  stage: deploy_test_server
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED
  tags:
    - system
  before_script:
    - docker login --username pvt2024 --password $DOCKER_PASS # DOCKER_PASS defined in GitLab CI/CD settings as a secure variable.
  script:
    - docker system prune -a -f

    - docker compose -f docker-compose.yml -f docker-compose-feature.yml build
    - docker compose -f docker-compose.yml -f docker-compose-feature.yml push

    - rm -rf /var/www/html/nginx
    - rm -rf /var/www/html/*.yml

    - cp ./docker-compose.yml /var/www/html/
    - cp ./docker-compose-feature.yml /var/www/html/
    - cp -r ./nginx /var/www/html/

    - cd /var/www/html/
    - docker compose -f docker-compose.yml -f docker-compose-feature.yml up -d --pull always

run-systests:
  stage: systest
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED
  tags:
    - system
  image: mcr.microsoft.com/playwright:v1.39.0-jammy
  script:
    - cd frontend/
    - npm ci
    - npm run systest:ci
    
deploy-prod-server:
  stage: deploy_prod_server
  resource_group: deploy
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - system
  script:
    - ssh pvt@5dv214vt24-prod.cs.umu.se 'cd /home/pvt/prod/ && ./build.sh '$CI_COMMIT_TAG' && exit'
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
