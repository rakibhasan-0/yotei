stages:
 - test
# - build
# - systest
# - publish
# - deploy

variables:
  FEATURE: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME


.only-maven: &only-maven
  only:
    changes:
      - backend/pom.xml
      - backend/lint_check.xml
      - backend/checkstyle-supressions.xml
      - backend/api/**/*
      - backend/gateway/**/*

.skippable: &skippable
  except:
    variables:
      # Possible improvement for later: /^\[(.*,\s*)*skip?(,.*)*\]/i
      # This would allow for patterns such as [abc, skip, cba] etc.
      # This tag allows for skipping the pipeline, useful for example
      # if you want to push unfinished changes or for documentation.
      - $CI_COMMIT_MESSAGE =~ /^\[skip?\]/i

tests:
  <<: *skippable
  <<: *only-maven
  stage: test
  image: maven:3.8.3-openjdk-17
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/backend/.m2/repository"
  cache:
    paths:
      - backend/.m2/repository
    policy: pull-push
  script:
    cd backend
    - mvn -q test

build_gateway_image:
  <<: *skippable
  <<: *only-maven
  image: docker:20
  services:
    - docker:20-dind
  stage: build
  variables:
    DOCKER_DRIVER: "overlay2"
    CONTAINER_REPOSITORY: "pvt2023"
  before_script:
    - apk update && apk add jq
    - docker login -u "$DOCKER_CLIENT" -p "$DOCKER_SECRET"
  script:
    - docker build -t $CONTAINER_REPOSITORY/gateway:latest gateway
    - docker save -o /images/gateway-$FEATURE.tar $CONTAINER_REPOSITORY/gateway:latest
    - docker tag $CONTAINER_REPOSITORY/gateway:latest $CONTAINER_REPOSITORY/gateway:staging-$FEATURE
    - docker push $CONTAINER_REPOSITORY/gateway:staging-$FEATURE
  only:
    refs:
      - merge_requests

build_api_image:
  <<: *skippable
  <<: *only-maven
  image: docker:20
  services:
    - docker:20-dind
  stage: build
  variables:
    DOCKER_DRIVER: "overlay2"
    CONTAINER_REPOSITORY: "pvt2023"
  before_script:
    - apk update && apk add jq
    - docker login -u "$DOCKER_CLIENT" -p "$DOCKER_SECRET"
  script:
    - docker build -t $CONTAINER_REPOSITORY/api:latest api
    - docker save -o /images/api-$FEATURE.tar $CONTAINER_REPOSITORY/api:latest
    - docker tag $CONTAINER_REPOSITORY/api:latest $CONTAINER_REPOSITORY/api:staging-$FEATURE
    - docker push $CONTAINER_REPOSITORY/api:staging-$FEATURE
  only:
    refs:
      - merge_requests

systest:
  <<: *skippable
  image: docker:20
  services:
    - docker:20-dind
  stage: systest
  before_script:
    - apk update && apk add curl
    - mkdir systest
    - >
      cp /images/api-$FEATURE.tar api-latest-override.tar || :
    - >
      cp /images/gateway-$FEATURE.tar gateway-latest-override.tar || :
    - >
      >systest/run-systest.sh curl --silent --show-error --fail
      --header "PRIVATE-TOKEN: $INFRA_REPO_ACCESS_TOKEN"
      "https://git.cs.umu.se/api/v4/projects/9165/repository/files/systest%2Frun-systest.sh/raw?ref=main"
    - chmod +x systest/run-systest.sh
    - >
      >systest/find-version.sh curl --silent --show-error --fail
      --header "PRIVATE-TOKEN: $INFRA_REPO_ACCESS_TOKEN"
      "https://git.cs.umu.se/api/v4/projects/9165/repository/files/systest%2Ffind-version.sh/raw?ref=main"
    - chmod +x systest/find-version.sh
  script:
    - >
      DB_VERSION=$(systest/find-version.sh db "$CI_COMMIT_DESCRIPTION")
      FRONTEND_VERSION=$(systest/find-version.sh frontend "$CI_COMMIT_DESCRIPTION")
      systest/run-systest.sh $CI_JOB_ID
  only:
    refs:
      - merge_requests

publish_gateway_image:
  <<: *skippable
  image: docker:20
  services:
    - docker:20-dind
  stage: publish
  variables:
    DOCKER_DRIVER: "overlay2"
    CONTAINER_REPOSITORY: "pvt2023"
    VERSION: "1.0"
  before_script:
    - apk update && apk add jq
    - docker login -u "$DOCKER_CLIENT" -p "$DOCKER_SECRET"
  script:
    - docker build -t $CONTAINER_REPOSITORY/gateway:latest gateway
    - docker tag $CONTAINER_REPOSITORY/gateway:latest $CONTAINER_REPOSITORY/gateway:$VERSION
    - docker push $CONTAINER_REPOSITORY/gateway:latest
    - docker push $CONTAINER_REPOSITORY/gateway:$VERSION
  only:
    - main

publish_api_image:
  <<: *skippable
  image: docker:20
  services:
    - docker:20-dind
  stage: publish
  variables:
    DOCKER_DRIVER: "overlay2"
    CONTAINER_REPOSITORY: "pvt2023"
    VERSION: "1.0"
  before_script:
    - apk update && apk add jq
    - docker login -u "$DOCKER_CLIENT" -p "$DOCKER_SECRET"
  script:
    - docker build -t $CONTAINER_REPOSITORY/api:latest api
    - docker tag $CONTAINER_REPOSITORY/api:latest $CONTAINER_REPOSITORY/api:$VERSION
    - docker push $CONTAINER_REPOSITORY/api:latest
    - docker push $CONTAINER_REPOSITORY/api:$VERSION
  only:
    - main

deploy:
  <<: *skippable
  image: ubuntu:latest
  stage: deploy
  resource_group: deploy_prod
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | tr -d '\r')
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - ssh pvt@imp.cs.umu.se "cd /home/pvt/Desktop/infra && docker compose pull && docker compose down && docker compose up -d"
  only:
    - main

deploy_javadoc:
  <<: *skippable
  image: ubuntu:latest
  resource_group: deploy_prod
  stage: deploy
  before_script:
    - apt-get update -y && apt-get upgrade -y && apt install openssh-client maven rsync openjdk-17-jdk openjdk-17-jre -y
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | tr -d '\r')
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - mvn javadoc:aggregate
    - rsync -avzhuP  ./target/site/apidocs/* pvt@imp.cs.umu.se:/home/pvt/pvt-web/javadoc/
  only:
    - main
